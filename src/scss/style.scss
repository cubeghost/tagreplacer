$font-sans-serif: system-ui, sans-serif;
$font-monospace: Roboto Mono, monospace;

// @import 'input';
@import 'markdown';

:root {
  --container-width: 60rem;
  --background-color: #fff;
  --foreground-color: #000;
  --background-color-rgb: 255, 255, 255;
  --foreground-color-rgb: 0, 0, 0;
  --post-background-color: transparent;
}

:root.dark-mode {
  --background-color: #000;
  --foreground-color: #fff;
  --background-color-rgb: 0, 0, 0;
  --foreground-color-rgb: 255, 255, 255;
  --post-background-color: rgba(255, 255, 255, 0.1);
}

* {
  box-sizing: border-box;
}

html,
body,
#react-root {
  height: 100%;
}

body {
  font-family: $font-monospace;
  margin: 0;
  background-color: var(--background-color);
  color: var(--foreground-color);
}

header,
footer {
  flex-shrink: 0;
}

main {
  flex: 1 0 auto;
}

header {
  padding: 1rem;
  z-index: 2;
  display: flex;
  justify-content: space-between;
  align-items: center;

  h1 {
    font-size: 1rem;
  }
}

footer {
  margin-top: auto;
  padding: 1rem;
}

a {
  color: inherit;
}

nav {
  display: flex;
  gap: 0.5rem;
}

.root {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  max-width: var(--container-width);
  padding: 0 2rem;
  margin-left: auto;
  margin-right: auto;
  position: relative;

  @media (max-width: 700px) {
    padding: 0 1.5rem;
  }
}

.section {
  position: relative;
  padding: 1rem;
  padding-bottom: 1.5rem;
  margin: 1rem 0;
  border: 1px solid var(--foreground-color);
  background-color: var(--background-color);

  &--disabled {
    opacity: 0.25;
  }

  &--enabled {
    opacity: 1;
    transition: 200ms ease opacity;
  }

  &:empty {
    display: none;
  }
}

.section .actions {
  position: absolute;
  bottom: 0;
  right: 0;
  margin-right: 1rem;
  padding-inline-start: 2px;
  padding-inline-end: 2px;
  transform: translateY(50%);
  background-color: var(--background-color);
}

.actions {
  display: flex;
  gap: 2px;
}

button.button {
  background-color: var(--background-color);
  border: 1px solid var(--foreground-color);
  border-radius: 4px;
  padding: 3px 8px;

  &:disabled {
    border-color: rgba(var(--foreground-color-rgb), 0.25);
  }

  &:not(:disabled):active {
    background-color: rgba(var(--foreground-color-rgb), 0.25);
  }
}

.row {
  flex: 1;
  display: flex;

  &.justify-space-between {
    justify-content: space-between;
  }
}

.column {
  flex-basis: 50%;
}

.field {
  label,
  input {
    margin-right: 0.5rem;
  }
}

.pixel-perfect {
  image-rendering: pixelated;
  -ms-interpolation-mode: nearest-neighbor;
}

.image-button {
  appearance: none;
  background: transparent;
  border: 0;
  cursor: pointer;
}

.options-icon .foreground {
  fill: var(--foreground-color);
}

@keyframes connectStroke {
  to {
    stroke-dashoffset: 0;
  }
}
.svg-connector .mask-path {
  stroke-dasharray: 1000;
  stroke-dashoffset: 1000;
}
.svg-connector-enabled .mask-path {
  animation: connectStroke 2200ms linear forwards;
}
.svg-connector .svg-connector-path {
  stroke: var(--foreground-color);
}

.sticky {
  position: sticky;
  top: 0;
  z-index: 1;
}

.post {
  padding: 0.5rem 1rem;
  margin: 0.5rem 0;
  background-color: var(--post-background-color);
  border: 1px dotted rgba(var(--foreground-color-rgb), 0.25);
  font-size: 0.8rem;

  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0.5rem;

  &-permalink {
    display: flex;
    gap: 0.5rem;
    align-items: center;

    span {
      max-width: min(20vw, calc(var(--container-width) / 5));
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;

      &:empty {
        display: none;
      }
    }
  }

  &-tags {
    opacity: 0.5;
  }

  &-thumbnail {
    display: block;
    height: 1.5rem;
    width: 1.5rem;
  }

  &-checkmark {
    position: absolute;
    top: 0;
    right: 0;
    padding: 0.75rem 1rem;
  }
}

@keyframes rectDash {
  from {
    stroke-dashoffset: 1000;
  }
  to {
    stroke-dashoffset: 0;
  }
}
.connect {
  display: block;
  position: relative;
  text-align: center;
  text-decoration: none;
  width: 80%;
  margin: 2rem auto;
  padding: 1rem;
  font-size: 4vw;
  font-size: clamp(1rem, 4vw, 2.5rem);

  svg {
    --rect-length: 255.3469;

    position: absolute;
    height: 100%;
    max-width: 90vw;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    rect.dashed {
      stroke: rgba(var(--foreground-color-rgb), 0.25);
      stroke-dasharray: 1;
    }
    rect.stroke {
      stroke-width: 2px;
      stroke: rgba(var(--background-color-rgb), 0.75);
      stroke-dasharray: var(--rect-length);
      stroke-dashoffset: var(--rect-length);
    }
  }

  &:hover svg,
  &:active svg {
    rect.dashed {
      stroke: rgba(var(--foreground-color-rgb), 1);
    }
    rect.stroke {
      stroke-dasharray: calc(var(--rect-length) - 40) 40;
      animation: rectDash 6s linear infinite;
    }
  }
}